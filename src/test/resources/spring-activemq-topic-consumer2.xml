<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://activemq.apache.org/schema/core
       http://activemq.apache.org/schema/core/activemq-core-5.14.4.xsd">

       <!-- 读入配置属性文件 -->
       <context:property-placeholder location="classpath:activemq.properties" />

       <!-- 注释配置 -->
       <context:annotation-config />

       <!-- 扫描包起始位置 -->
       <context:component-scan base-package="activemq.topic.consumer" />

       <!-- 第三方MQ工厂: ConnectionFactory -->
       <amq:connectionFactory id="connectionFactory"
                              brokerURL="${activemq.brokerURL}"
                              userName="${activemq.userName}"
                              password="${activemq.password}"
                              useAsyncSend="true"
       />

       <!--
           ActiveMQ为我们提供了一个PooledConnectionFactory，通过往里面注入一个ActiveMQConnectionFactory
           可以用来将Connection、Session和MessageProducer池化，这样可以大大的减少我们的资源消耗,要依赖于 activemq-pool包
        -->
       <bean id="pooledConnectionFactory" class="org.apache.activemq.jms.pool.PooledConnectionFactory">
              <property name="connectionFactory" ref="connectionFactory"/>
              <property name="maxConnections" value="${activemq.pool.maxConnections}"/>
       </bean>

       <!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
       <bean id="singleConnectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
              <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
              <property name="targetConnectionFactory" ref="pooledConnectionFactory" />
              <property name="clientId" value="consumer-client2"/>
       </bean>

       <!-- 定义topic -->
       <bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">
              <constructor-arg value="mytopic"></constructor-arg>
       </bean>

       <!-- 消息订阅端 topicConsumer -->
       <bean id="topicConsumer" class="activemq.topic.consumer.TopicMsgConsumer"></bean>

       <!-- 消息订阅监听器容器 -->
       <bean id="listenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
              <property name="connectionFactory" ref="singleConnectionFactory"/>
              <!-- 开启订阅模式 -->
              <property name="pubSubDomain" value="true" />
              <!-- 订阅主题 -->
              <property name="destination" ref="topicDestination" />
              <!-- 消息监听器 -->
              <property name="messageListener" ref="topicConsumer"/>

              <!-- 消息持久化 -->
              <property name="subscriptionDurable" value="true"/>
              <!-- 接收者ID -->
              <property name="clientId" value="consumer-client2" />
              <property name="durableSubscriptionName" value="consumer-client2"/>
       </bean>

</beans>